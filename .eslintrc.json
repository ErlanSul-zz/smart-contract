{
  "root": true,
  "env": {
  "node": true,
    "jest": true
},
  "extends": [
  "eslint:recommended",
  "plugin:@typescript-eslint/recommended",
  "plugin:prettier/recommended"
],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
  "project": "tsconfig.json",
    "tsconfigRootDir": "."
},
  "plugins": [
  "@typescript-eslint",
  "prettier"
],
  "rules": {
  "prettier/prettier": "error",
    "no-extra-boolean-cast": [
    "error",
    {
      "enforceForLogicalOperands": true
    }
  ],
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/ban-ts-comment": [
    "error",
    {
      "ts-expect-error": false
    }
  ],
    "@typescript-eslint/ban-types": "error",
    "brace-style": "off",
    "@typescript-eslint/brace-style": "error",
    "@typescript-eslint/class-literal-property-style": "off",
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/consistent-type-definitions": "error",
    "default-param-last": "off",
    "@typescript-eslint/default-param-last": "off",
    "dot-notation": "off",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/explicit-module-boundary-types": [
    "error",
    {
      "allowArgumentsExplicitlyTypedAsAny": true
    }
  ],
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": "error",
    "indent": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "init-declarations": "off",
    "@typescript-eslint/init-declarations": [
    "off",
    "never"
  ],
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": "error",
    "lines-between-class-members": "off",
    "@typescript-eslint/lines-between-class-members": [
    "error",
    {
      "exceptAfterOverload": true
    }
  ],
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/member-ordering": [
    "error",
    {
      "default": [
        "signature",
        "field",
        "constructor",
        "method"
      ]
    }
  ],
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/naming-convention": [
    "error",
    {
      "selector": "interface",
      "format": [
        "PascalCase"
      ]
      /*"custom": {
       "regex": "^I[A-Z]",
       "match": false
       }*/
    }
  ],
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "@typescript-eslint/no-base-to-string": "error",
    "no-dupe-class-members": "off",
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "no-empty": [
    "error",
    {
      "allowEmptyCatch": true
    }
  ],
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-extra-non-null-assertion": "error",
    "no-extra-parens": "off",
    "@typescript-eslint/no-extra-parens": [
    "error",
    "functions"
  ],
    "no-extra-semi": "off",
    "@typescript-eslint/no-extra-semi": "error",
    "@typescript-eslint/no-extraneous-class": [
    "error",
    {
      "allowConstructorOnly": true,
      "allowEmpty": false,
      "allowStaticOnly": true,
      "allowWithDecorator": true
    }
  ],
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-inferrable-types": [
    "error",
    {
      "ignoreParameters": true
    }
  ],
    "no-invalid-this": "off",
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-invalid-void-type": "error",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
    "off",
    {
      "ignoreNumericLiteralTypes": true,
      "ignoreEnums": true,
      "ignoreReadonlyClassProperties": true
    }
  ],
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-namespace": [
    "off",
    {
      "allowDeclarations": true,
      "allowDefinitionFiles": true
    }
  ],
    "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-parameter-properties": [
    "error",
    {
      "allows": [
        "private readonly"
      ]
    }
  ],
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/no-throw-literal": "error",
    "@typescript-eslint/no-type-alias": [
    "error",
    {
      "allowAliases": "always",
      "allowMappedTypes": "always",
      "allowLiterals": "always"
    }
  ],
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": [
    "error",
    {
      "allowConstantLoopConditions": false,
      "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
    }
  ],
    "@typescript-eslint/no-unnecessary-qualifier": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "no-unused-expressions": "off",
    "@typescript-eslint/no-unused-expressions": "error",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars-experimental": "off",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": "error",
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/no-var-requires": "error",
    "@typescript-eslint/prefer-as-const": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-function-type": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "off",
    "@typescript-eslint/prefer-readonly": "error",
    "@typescript-eslint/prefer-readonly-parameter-types": "off",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/prefer-ts-expect-error": "error",
    "@typescript-eslint/promise-function-async": "error",
    "quotes": "off",
    "@typescript-eslint/quotes": [
    "error",
    "single",
    {
      "avoidEscape": true
    }
  ],
    "@typescript-eslint/require-array-sort-compare": "error",
    "require-await": "off",
    "@typescript-eslint/require-await": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "no-return-await": "off",
    "@typescript-eslint/return-await": [
    "error",
    "always"
  ],
    "semi": "off",
    "@typescript-eslint/semi": "error",
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": [
    "error",
    {
      "anonymous": "always",
      "named": "never",
      "asyncArrow": "always"
    }
  ],
    "@typescript-eslint/strict-boolean-expressions": [
    "error",
    {
      "allowNullableObject": true,
      "allowNullableBoolean": true,
      "allowString": true,
      "allowAny": true,
      "allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing": true
    }
  ],
    "@typescript-eslint/switch-exhaustiveness-check": "error",
    "@typescript-eslint/triple-slash-reference": "error",
    "@typescript-eslint/type-annotation-spacing": "error",
    "@typescript-eslint/typedef": [
    "error",
    {
      "arrowParameter": false
    }
  ],
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/unified-signatures": "error"
},
  "overrides": [
  {
    "files": [
      "*.ts",
      "*.tsx"
    ],
    "rules": {
      "constructor-super": "off",
      // ts(2335) & ts(2377)
      "getter-return": "off",
      // ts(2378)
      "no-const-assign": "off",
      // ts(2588)
      "no-dupe-args": "off",
      // ts(2300)
      "no-dupe-class-members": "off",
      // ts(2393) & ts(2300)
      "no-dupe-keys": "off",
      // ts(1117)
      "no-func-assign": "off",
      // ts(2539)
      "no-import-assign": "off",
      // ts(2539) & ts(2540)
      "no-new-symbol": "off",
      // ts(2588)
      "no-obj-calls": "off",
      // ts(2349)
      "no-redeclare": "off",
      // ts(2451)
      "no-setter-return": "off",
      // ts(2408)
      "no-this-before-super": "off",
      // ts(2376)
      "no-undef": "off",
      // ts(2304)
      "no-unreachable": "off",
      // ts(7027)
      "no-unsafe-negation": "off",
      // ts(2365) & ts(2360) & ts(2358)
      "no-var": "error",
      // ts transpiles let/const to var, so no need for vars any more
      "prefer-const": "error",
      // ts provides better types with const
      "prefer-rest-params": "error",
      // ts provides better types with rest args over arguments
      "prefer-spread": "error",
      // ts transpiles spread to apply, so no need for manual apply
      "valid-typeof": "off"
      // ts(2367)
    }
  }
]
}
